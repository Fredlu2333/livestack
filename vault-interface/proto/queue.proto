syntax = "proto3";

package livestack;

// import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto"; 

service QueueService {
  rpc AddJob(QueueJob) returns (google.protobuf.Empty);
  rpc ReportAsWorker(stream FromWorker) returns (stream ToWorker);
  rpc InitInstance(InitInstanceParams) returns (InitInstanceResponse);
}

message InitInstanceParams {
}

message InitInstanceResponse {
  string instanceId = 1;
}

message QueueJob {
  string projectUuid = 1;
  string specName = 2;
  string jobId = 3;
  optional string contextId = 4;
  string jobOptionsStr = 5;
}

message SignUp {
  string projectUuid = 1;
  string specName = 2;
}

message WorkerStopped {
  string projectUuid = 1;
  string specName = 2;
}

message ProgressUpdate {
  string projectUuid = 1;
  string specName = 2;
  string jobId = 3;
  int32 progress = 4;
}

message JobCompleted {
  string projectUuid = 1;
  string specName = 2;
  string jobId = 3;
}

message JobFailed {
  string projectUuid = 1;
  string specName = 2;
  string jobId = 3;
  string errorStr = 4;
}

message FromWorker {
  string workerId = 1;
  oneof value {
    SignUp signUp = 2;
    ProgressUpdate progressUpdate = 3;
    JobCompleted jobCompleted = 4;
    JobFailed jobFailed = 5;
    WorkerStopped workerStopped = 6;
  }
}

message ToWorker {
  string workerId = 1;
  QueueJob job = 2;
}